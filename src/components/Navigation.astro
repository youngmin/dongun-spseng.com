---
const navigationItems = [
  { href: "/", label: "HOME" },
  { href: "/portfolio", label: "PORTFOLIO" },
  {
    label: "ABOUT",
    submenu: [
      { href: "/about/company-profile", label: "COMPANY PROFILE" },
      { href: "/about/vision-mission", label: "VISION & MISSION" },
      { href: "/about/facilities", label: "FACILITIES" }
    ]
  },
  { href: "/contact", label: "CONTACT" },
];
---

<nav class="bg-black text-white sticky top-0 z-50 transition-all duration-300">
  <div class="max-w-7xl mx-auto px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <div class="flex items-center space-x-4">
        <div class="flex-shrink-0">
          <a href="/" class="flex items-center space-x-3">
            <svg width="40" height="40" viewBox="0 0 40 40" class="text-[hsl(var(--sps-accent))]">
              <defs>
                <linearGradient id="logoGrad" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%" stop-color="hsl(45, 93%, 47%)" />
                  <stop offset="100%" stop-color="hsl(45, 93%, 57%)" />
                </linearGradient>
              </defs>

              <!-- Outer ring -->
              <circle cx="20" cy="20" r="18" fill="none" stroke="url(#logoGrad)" stroke-width="2"/>

              <!-- Gear teeth outer -->
              <g fill="url(#logoGrad)">
                <rect x="19" y="2" width="2" height="4" rx="1"/>
                <rect x="19" y="34" width="2" height="4" rx="1"/>
                <rect x="2" y="19" width="4" height="2" rx="1"/>
                <rect x="34" y="19" width="4" height="2" rx="1"/>
                <rect x="28.3" y="6.1" width="2" height="4" rx="1" transform="rotate(45 29.3 8.1)"/>
                <rect x="9.7" y="29.9" width="2" height="4" rx="1" transform="rotate(45 10.7 31.9)"/>
                <rect x="29.9" y="28.3" width="2" height="4" rx="1" transform="rotate(-45 30.9 30.3)"/>
                <rect x="6.1" y="9.7" width="2" height="4" rx="1" transform="rotate(-45 7.1 11.7)"/>
              </g>

              <!-- Inner circle -->
              <circle cx="20" cy="20" r="10" fill="url(#logoGrad)"/>

              <!-- Center bolt -->
              <circle cx="20" cy="20" r="3" fill="black"/>
              <circle cx="20" cy="20" r="1.5" fill="url(#logoGrad)"/>

              <!-- SPS letters -->
              <text x="20" y="25" text-anchor="middle" class="fill-black text-xs font-bold">SPS</text>
            </svg>
            <span class="text-xl font-bold">
              SPS Engineering
            </span>
          </a>
        </div>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-8">
          {navigationItems.map((item) => (
            item.submenu ? (
              <div class="relative group">
                <button class="nav-link text-white hover:text-[hsl(var(--sps-accent))] px-3 py-2 text-sm font-medium transition-colors duration-200 uppercase">
                  {item.label}
                </button>
                <div class="absolute left-0 mt-2 w-48 bg-black border border-gray-800 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200">
                  {item.submenu.map((subitem) => (
                    <a
                      href={subitem.href}
                      class="block px-4 py-2 text-sm text-white hover:text-[hsl(var(--sps-accent))] hover:bg-gray-900 transition-colors duration-200 uppercase"
                    >
                      {subitem.label}
                    </a>
                  ))}
                </div>
              </div>
            ) : (
              <a
                href={item.href}
                class="nav-link text-white hover:text-[hsl(var(--sps-accent))] px-3 py-2 text-sm font-medium transition-colors duration-200 uppercase"
              >
                {item.label}
              </a>
            )
          ))}
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button id="mobile-menu-button" class="p-2">
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div id="mobile-menu" class="hidden md:hidden bg-black">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {navigationItems.map((item) => (
        item.submenu ? (
          <div>
            <button class="mobile-submenu-toggle w-full text-left px-3 py-2 text-base font-medium text-white hover:text-[hsl(var(--sps-accent))] transition-colors duration-200 uppercase">
              {item.label}
            </button>
            <div class="mobile-submenu hidden pl-4">
              {item.submenu.map((subitem) => (
                <a
                  href={subitem.href}
                  class="block px-3 py-2 text-sm text-white hover:text-[hsl(var(--sps-accent))] transition-colors duration-200 uppercase"
                >
                  {subitem.label}
                </a>
              ))}
            </div>
          </div>
        ) : (
          <a
            href={item.href}
            class="mobile-nav-link block px-3 py-2 text-base font-medium text-white hover:text-[hsl(var(--sps-accent))] transition-colors duration-200 uppercase"
          >
            {item.label}
          </a>
        )
      ))}
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Mobile submenu toggle
  document.querySelectorAll('.mobile-submenu-toggle').forEach(toggle => {
    toggle.addEventListener('click', () => {
      const submenu = toggle.nextElementSibling;
      submenu?.classList.toggle('hidden');
    });
  });
</script>
